@using ProductViewer.WebUI.Models
@model ProductListViewModel

@{
    ViewBag.Title = "List of products";
}

<div class="card-header">
    <h1 class="h1">Products:</h1>
</div>
<div class="card-body">
    @using (Html.BeginForm("Index", "Home", FormMethod.Get))
    { 
    <div class="card-panel teal lighten-5">
        <div class="input-field col s12" data-tip="To find something, you need to know what to look for! Enter at least one character and press Enter...">
            <i class="material-icons prefix">search</i>
            <input value="@Model.SearchValue" name="searchValue" id="search" type="text" class="validate" />
            @Html.HiddenFor(x=>x.PagingInfo.CurrentPage)
            <label for="search">Search:</label>
        </div>
    </div>
    }
    <a class="waves-effect waves-light btn-large" href="@Url.Action("AddOrEditProduct", new { isEditing = false })" style="margin-bottom: 0.6em"><i class="material-icons right">add</i>Add new product</a>
    <div class="card-panel grey lighten-5">
        <table class="highlight">
            <thead>
                <tr>
                    <th style="min-width: 6em">
                        <a class="waves-effect waves-teal btn-flat no-padding">
                            @{
                                switch (@Model.SortConfig.Name)
                                {
                                    case true:
                                        @:<i class="material-icons right">expand_less</i>
                                        break;
                                    case false:
                                        @:<i class="material-icons right">expand_more</i>
                                        break;
                                    default:
                                        @:<i class="material-icons right hide">expand_more</i>
                                        break;
                                }
                            }
                            Name
                        </a>
                    </th>
                    <th>DESCRIPTION</th>
                    <th style="min-width: 9em">
                        <a class="waves-effect waves-teal btn-flat no-padding">
                            @{
                                switch (@Model.SortConfig.UnitPrice)
                                {
                                    case true:
                                        @:<i class="material-icons right">expand_less</i>
                                        break;
                                    case false:
                                        @:<i class="material-icons right">expand_more</i>
                                        break;
                                    default:
                                        @:<i class="material-icons right hide">expand_more</i>
                                        break;
                                }
                            }
                            Unit price
                        </a>
                    </th>
                    <th style="min-width: 8em">
                        <a class="waves-effect waves-teal btn-flat no-padding">
                            @{
                                switch (@Model.SortConfig.Quantity)
                                {
                                    case true:
                                        @:<i class="material-icons right">expand_less</i>
                                        break;
                                    case false:
                                        @:<i class="material-icons right">expand_more</i>
                                        break;
                                    default:
                                        @:<i class="material-icons right hide">expand_more</i>
                                        break;
                                }
                            }
                            Quantity
                        </a>
                    </th>
                    <th style="min-width: 10em">
                        <a class="waves-effect waves-teal btn-flat no-padding">
                            @{
                                switch (@Model.SortConfig.PriceForAll)
                                {
                                    case true:
                                        @:<i class="material-icons right">expand_less</i>
                                        break;
                                    case false:
                                        @:<i class="material-icons right">expand_more</i>
                                        break;
                                    default:
                                        @:<i class="material-icons right hide">expand_more</i>
                                        break;
                                }
                            }
                            Price for all
                        </a>
                    </th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>

            <tbody>
                @foreach (var p in @Model.Products)
                                    {
                    <tr>
                        <td>@p.ProductEntityName</td>
                        <td>@p.ProductDescriptionEntityDescription</td>
                        <td>@p.ProductListPriceHistoryEntityListPrice.ToString("C")</td>
                        <td>@p.ProductInventoryEntityQuantity</td>
                        <td>@p.PriceForAll.ToString("C")</td>
                        <td>
                            <a href="@Url.Action("AddOrEditProduct", new { isEditing = true, id = p.ProductEntityId })" id="@p.ProductEntityId" class="btn-floating btn waves-effect waves-light orange"><i class="material-icons">edit</i></a>
                        </td>
                        <td>
                            <a type="submit" href="@Url.Action("RemoveItem", "Home", new { id = p.ProductEntityId })" id="@p.ProductEntityId" class="btn-floating btn waves-effect waves-light red"><i class="material-icons">delete</i></a>
                        </td>
                    </tr>
                }
            </tbody>

        </table>
        <div>
            @Html.PageLinks(Model.PagingInfo, x => Url.Action("Index", new { page = x, searchValue = @Model.SearchValue}))
        </div>
    </div>
</div>